name: FloxBx
on:
  push:
    branches-ignore:
      - '*WIP'
jobs:
  build-macos:
    name: Build on macOS
    runs-on: ${{ matrix.runs-on }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    defaults:
      run:
        working-directory: ./Packages/FloxBxKit
    strategy:
      matrix:
        include:
          - runs-on: macos-12
            xcode: "/Applications/Xcode_14.0.1.app"
            iOSVersion: "16.0"
            watchOSVersion: "9.0"
            watchName: "Apple Watch Series 8 (41mm)"
          - runs-on: macos-12
            xcode: "/Applications/Xcode_14.1.app"
            iOSVersion: "16.1"
            watchOSVersion: "9.1"
            watchName: "Apple Watch Ultra (49mm)"
    steps:
      - uses: actions/checkout@v2
      - name: Set Xcode Name
        run: echo "XCODE_NAME=$(basename -- ${{ matrix.xcode }} | sed 's/\.[^.]*$//' | cut -d'_' -f2)" >> $GITHUB_ENV
      - name: Setup Xcode
        run: sudo xcode-select -s ${{ matrix.xcode }}/Contents/Developer
      - name: Install mint
        run: |
          brew update
          brew install mint
      - name: Build
        run: swift build
      - name: Lint
        run: ./scripts/lint.sh 
      - name: Dump PIF
        run: |
          swift package dump-pif > /dev/null
          MAX_ATTEMPT=3
          ATTEMPT=0
          while [ -z $SUCCESS ] && [ "$ATTEMPT" -le "$MAX_ATTEMP" ]; do
            xcodebuild clean -scheme FloxBxUI -destination 'generic/platform=iOS' | grep -q "CLEAN SUCCEEDED" && SUCCESS=true
            ATTEMPT=$(($ATTEMPT+1))
          done
      - name: Run iOS target tests
        run:  xcodebuild build -scheme FloxBxUI -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 13,OS=${{ matrix.iOSVersion }}'
      # - uses: sersoft-gmbh/swift-coverage-action@v2
      # - name: Upload iOS coverage to Codecov
      #   uses: codecov/codecov-action@v2        
      #   with:
      #     fail_ci_if_error: true
      #     flags: iOS,iOS-${{ matrix.iOSVersion }}
      #     verbose: true        
      #     token: ${{ secrets.CODECOV_TOKEN }}          
      - name: Run watchOS target tests
        run: xcodebuild build -scheme FloxBxUI -sdk watchsimulator -destination 'platform=watchOS Simulator,name=${{ matrix.watchName }},OS=${{ matrix.watchOSVersion }}'
      # - uses: sersoft-gmbh/swift-coverage-action@v2
      # - name: Upload watchOS coverage to Codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     fail_ci_if_error: true
      #     flags: watchOS,watchOS${{ matrix.watchOSVersion }}
      #     verbose: true
      #       token: ${{ secrets.CODECOV_TOKEN }}
